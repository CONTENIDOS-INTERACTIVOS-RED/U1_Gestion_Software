(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["tema2"],{"0661":function(a,e,t){a.exports=t.p+"img/icono-yt.0e5f1361.svg"},"21b2":function(a,e,t){"use strict";t("ffec")},2391:function(a,e,t){a.exports=t.p+"img/material-complementario.06dbfac1.svg"},"369e":function(a,e,t){a.exports=t.p+"img/anexo2.2b36d806.png"},"565b":function(a,e,t){a.exports=t.p+"img/book.b08cb9da.svg"},"5b0d":function(a,e,t){"use strict";t.r(e);var s=function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("div",{staticClass:"curso-main-container pb-3"},[s("BannerInterno",{attrs:{subTitulo:"2. Creación de ramas y fusiones"}}),s("div",{staticClass:"container tarjeta tarjeta--blanca p-4 p-md-5 overflow-hidden"},[s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-right"}},[a._v("La creación de ramas y fusiones constituye una práctica fundamental en la gestión moderna del software, ya que permite a los equipos trabajar de forma paralela sin interferir en el código principal. Mediante las ramas, los desarrolladores pueden implementar nuevas funcionalidades, corregir errores o experimentar con mejoras de manera aislada. Posteriormente, gracias al proceso de fusión, estos cambios se integran al proyecto principal, consolidando el trabajo colaborativo y reduciendo riesgos. Esta estrategia mejora la organización del código, fortalece la colaboración y garantiza una mejor trazabilidad del desarrollo (Chacon & Straub, 2014).")]),a._m(0),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("La ramificación es un pilar esencial en los sistemas de control de versiones modernos como Git y SVN. Esta práctica permite crear trayectorias independientes de desarrollo a partir de una base común, facilitando el trabajo simultáneo en distintas funcionalidades, correcciones o pruebas sin afectar el código principal (Pérez Martínez, 2015).")]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("Las estrategias de branching en Git y SVN son: ")]),a._m(1),a._m(2),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("La creación y gestión de ramas representa una estrategia clave en los sistemas de control de versiones, ya que permite organizar el trabajo en diferentes líneas de desarrollo sin comprometer la integridad del código principal. Herramientas como Git y SVN ofrecen mecanismos distintos pero eficaces para implementar esta estrategia (Chacon & Straub, 2014).")]),s("h2",{attrs:{"data-aos":"flip-up"}},[a._v("Creación y gestión de ramas en Git")]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("En Git, las ramas permiten trabajar de forma paralela con eficiencia y flexibilidad, facilitando flujos de trabajo colaborativos y ordenados.")]),a._m(3),a._m(4),s("h2",{staticClass:"mb-3"},[a._v("Creación y gestión de ramas en SVN")]),s("p",{staticClass:"mb-5"},[a._v("En Subversion (SVN), las ramas se implementan mediante directorios completos dentro del repositorio, lo que requiere una gestión más estructurada.")]),a._m(5),s("p",{staticClass:"mb-4"},[a._v("Un ejemplo de estructura de repositorio en SVN sería:")]),a._m(6),a._m(7),s("h2",[a._v("Buenas prácticas para crear y gestionar ramas")]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("Aplicar buenas prácticas en el uso de ramas es fundamental para evitar conflictos, mejorar la trazabilidad y facilitar la colaboración.")]),a._m(8),a._m(9),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("Los flujos de trabajo con ramas representan una estrategia fundamental en la gestión colaborativa del código fuente. Estas metodologías permiten organizar el desarrollo de software de forma eficiente, manteniendo entornos de trabajo aislados para nuevas características, correcciones, pruebas o despliegues. Cada sistema de control de versiones, como Git o SVN, adopta estos flujos con distintos grados de flexibilidad, siendo Git el más versátil en el manejo de ramificaciones complejas (Chacon & Straub, 2014).")]),s("h2",{staticClass:"mb-2"},[a._v("Git y la evolución de los flujos de trabajo")]),s("p",{staticClass:"mb-4"},[a._v("Git permite múltiples enfoques gracias a su estructura distribuida y liviana. A continuación, se presentan los flujos más utilizados:")]),a._m(10),s("h2",{staticClass:"mb-3"},[a._v("Flujos de trabajo en SVN")]),s("p",{staticClass:"mb-4"},[a._v("Aunque SVN no posee la flexibilidad de Git, también permite estructuras organizadas mediante convenciones de carpetas. A continuación, se resumen sus estrategias comunes:")]),a._m(11),s("p",{staticClass:"mb-5"},[a._v("Estas prácticas requieren disciplina y control manual, especialmente al fusionar los cambios.")]),a._m(12),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("La fusión, también conocida como merge, es una operación esencial en los sistemas de control de versiones. Permite integrar los cambios realizados en diferentes ramas dentro de una misma línea de desarrollo. Este proceso asegura que las contribuciones paralelas del equipo converjan en un historial coherente, preservando las aportaciones individuales y permitiendo una evolución controlada del código (Chacon & Straub, 2014).")]),a._m(13),s("h2",{staticClass:"mb-2"},[a._v("Tipos de fusiones en Git")]),s("p",{staticClass:"mb-4"},[a._v("Git proporciona diversos enfoques de fusión. A continuación se resumen sus características y ejemplos más representativos:")]),a._m(14),a._m(15),a._m(16),s("figcaption",{staticClass:"mt-2 text-center mb-5"},[a._v("Nota. Atlassian. (s.f.). Git merge. Atlassian.")]),s("h2",{staticClass:"mb-3"},[a._v("Fusiones en SVN")]),a._m(17),a._m(18),a._m(19),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("En entornos colaborativos donde múltiples desarrolladores trabajan sobre una misma base de código, los conflictos durante la fusión de ramas son inevitables. La resolución de conflictos en fusiones es el proceso mediante el cual se detectan, analizan y solucionan las discrepancias generadas al intentar integrar cambios que afectan las mismas líneas de código (Pérez Martínez, 2015).")]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("Estos conflictos surgen cuando dos ramas modifican de forma distinta una misma porción de código. En tales casos, el sistema de control de versiones no puede fusionar automáticamente, por lo que el desarrollador debe intervenir para decidir qué versión conservar, combinar o descartar.")]),a._m(20),s("p",{staticClass:"mb-4"},[a._v("En Git y SVN, los conflictos se manifiestan al ejecutar una fusión, recibiendo un mensaje de advertencia. Los archivos afectados se marcan con delimitadores especiales:")]),a._m(21),a._m(22),s("h2",{staticClass:"mb-2"},[a._v("Procesos de resolución de conflictos")]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("A continuación se presenta una comparación del proceso en Git y SVN:")]),a._m(23),a._m(24),a._m(25),a._m(26),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("En entornos donde la limpieza del historial y la linealidad del flujo de trabajo son prioritarias, el comando rebase de Git se presenta como una alternativa eficaz a la tradicional fusión de ramas. A diferencia del merge, que combina ramas preservando la estructura de bifurcaciones, el rebase reorganiza los commits de una rama para integrarlos en otra como si hubieran sido desarrollados secuencialmente. Esto permite mantener un historial más ordenado, libre de bifurcaciones innecesarias (Chacon & Straub, 2014).")]),a._m(27),s("h2",{staticClass:"mb-2",attrs:{"data-aos":"flip-up"}},[a._v("Diferencias entre merge y rebase")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("A continuación, se comparan ambas estrategias según sus características principales:")]),a._m(28),a._m(29),a._m(30),a._m(31),s("div",{staticClass:"bg-full-width bg-color-anexo mb-lg-0"},[s("div",{staticClass:"px-4 p-md-5"},[s("div",{staticClass:"row justify-content-center align-items-center"},[s("div",{staticClass:"col-lg-8 text-white"},[s("h2",{staticClass:"mb-4",attrs:{"data-aos":"flip-up"}},[a._v("Resolución de conflictos")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-right"}},[a._v("Se invita a leer el documento Resolución de conflictos, donde se aborda el manejo de discrepancias surgidas al trabajar colaborativamente en archivos de código fuente utilizando sistemas de control de versiones como Git y SVN. ")]),s("a",{staticClass:"anexo mb-4 bg-white w-fit",attrs:{href:a.obtenerLink("/downloads/Anexo_2.pdf"),target:"_blank","data-aos":"flip-up"}},[s("div",{staticClass:"anexo__icono",style:{"background-color":"#FCDFDB"}},[s("img",{attrs:{src:t("f906")}})]),a._m(32)])]),a._m(33)])])]),s("div",{staticClass:"bg-full-width border-top actividad bg-color-actividad"},[s("div",{staticClass:"p-4 p-md-5"},[s("div",{attrs:{id:"Actividad"}},[s("Actividad",{attrs:{cuestionario:a.cuestionario}})],1)])]),s("div",{staticClass:"bg-full-width border-top color-primario"},[s("div",{staticClass:"p-4 p-md-5"},[s("h2",{attrs:{"data-aos":"fade-left"}},[a._v("MATERIAL COMPLEMENTARIO")]),s("div",{staticClass:"row material-complementario"},[s("div",{staticClass:"col-12 col-md-6 col-lg-7"},[s("p",[a._v("Los invitamos a explorar el material complementario de este curso, en esta sección encontrará recursos que le permitirán profundizar y enriquecer su aprendizaje en los temas tratados en esta unidad.")]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3",style:{"max-width":"16px"},attrs:{src:t("565b")}}),s("a",{attrs:{href:"https://docs.github.com/es",target:"_blank",rel:"noopener noreferrer"}},[a._v("GitHub. (s.f.). Documentación de GitHub. ")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3",style:{"max-width":"16px"},attrs:{src:t("0661")}}),s("a",{attrs:{href:"https://www.youtube.com/watch?v=Fv0M1-KuHAY",target:"_blank",rel:"noopener noreferrer"}},[a._v("Demonassit Mino. (2023, 9 de marzo). Manejo de Ramas en Git [Vídeo]. YouTube. ")])])]),a._m(34)])])])])],1)},i=[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_1","data-aos":"flip-up"}},[t("h2",[t("span",[a._v("2.1")]),a._v(" Concepto de ramificación (branching)")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"row justify-content-center align-items-stretch mb-5"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-create"},[t("div",{staticClass:"row align-items-center"},[t("div",{staticClass:"col-auto"},[t("i",{staticClass:"fab fa-git-alt fa-3x"})]),t("div",{staticClass:"col"},[t("h4",{staticClass:"mb-0"},[a._v("Git")]),t("small",[a._v("Sistema Distribuido")])])])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("Diseñado desde su núcleo para facilitar una estrategia de ramificación liviana y eficiente. Cada rama es un puntero a un commit. Ejemplo:")]),t("div",{staticClass:"git-command-block mb-3"},[t("code",{staticClass:"text-success"},[a._v("git checkout -b feature/buscador")])]),t("p",{staticClass:"mb-3"},[a._v("Desde ese momento, todos los cambios se registran en la nueva rama. Para fusionarla con main:")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-success"},[a._v("git checkout main")])]),t("div",{staticClass:"git-command-block mb-3"},[t("code",{staticClass:"text-success"},[a._v("git merge feature/buscador")])]),t("p",{staticClass:"mb-0 small"},[a._v("Git permite trabajar con múltiples ramas en paralelo, como en Git Flow, donde se crean ramas específicas para desarrollo, producción, hotfixes y características.")])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-merge"},[t("div",{staticClass:"row align-items-center"},[t("div",{staticClass:"col-auto"},[t("i",{staticClass:"fas fa-folder-tree fa-3x"})]),t("div",{staticClass:"col"},[t("h4",{staticClass:"mb-0"},[a._v("SVN")]),t("small",[a._v("Sistema Centralizado")])])])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("Implementa ramas como directorios dentro del repositorio, usando convenciones como trunk, branches y tags. Ejemplo de creación de rama:")]),t("div",{staticClass:"git-command-block mb-3"},[t("code",{staticClass:"text-info"},[a._v('svn copy http://repositorio/proyecto/trunk http://repositorio/proyecto/branches/funcion_login -m "Creación de rama para función de login"')])]),t("p",{staticClass:"mb-0"},[a._v("Los cambios pueden fusionarse al trunk, pero el proceso suele requerir más intervención manual y seguimiento de revisiones.")])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_2","data-aos":"flip-up"}},[t("h2",[t("span",[a._v("2.2")]),a._v(" Creación y gestión de ramas")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"row justify-content-center align-items-stretch mb-5"},[t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-create"},[t("i",{staticClass:"fas fa-plus fa-2x mb-2"}),t("h5",{staticClass:"mb-0"},[a._v("Creación de ramas")])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("Crear una rama en Git es rápido y eficiente, ya que no genera copias completas del código, sino que crea un puntero a un commit específico. Ejemplo:")]),t("div",{staticClass:"git-command-block mb-3"},[t("code",{staticClass:"text-success"},[a._v("git checkout -b feature/notificaciones")])]),t("p",{staticClass:"mb-0 small text-muted"},[a._v("Desde ese momento, los cambios se almacenan en esa rama de forma aislada.")])])])]),t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-down"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-merge"},[t("i",{staticClass:"fas fa-code-branch fa-2x mb-2"}),t("h5",{staticClass:"mb-0"},[a._v("Fusión de ramas")])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("Al terminar una funcionalidad, se puede fusionar con la rama principal y eliminar para mantener ordenado el repositorio:")]),t("div",{staticClass:"git-command-block mb-3"},[t("code",{staticClass:"text-info"},[a._v("git checkout main"),t("br"),a._v("git merge feature/notificaciones"),t("br"),a._v("git branch -d feature/notificaciones")])])])])]),t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-manage"},[t("i",{staticClass:"fas fa-list fa-2x mb-2"}),t("h5",{staticClass:"mb-0"},[a._v("Comandos útiles")])]),t("div",{staticClass:"p-4"},[t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-warning"},[a._v("git branch")])]),t("small",{staticClass:"d-block text-muted mb-3"},[a._v("Lista ramas locales")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-warning"},[a._v("git branch -r ")])]),t("small",{staticClass:"d-block text-muted mb-3"},[a._v("Lista ramas remotas")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-warning"},[a._v("git branch -D nombre-rama")])]),t("small",{staticClass:"d-block text-muted"},[a._v("Elimina una rama local obsoleta")])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width git-flow-section mb-5"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row align-items-center"},[t("div",{staticClass:"col-lg-3 text-center mb-4 mb-lg-0"},[t("div",{staticClass:"git-flow-icon"},[t("i",{staticClass:"fab fa-git-alt fa-5x mb-3"}),t("h4",[a._v("Git Flow")])])]),t("div",{staticClass:"col-lg-9"},[t("h3",{staticClass:"mb-4"},[a._v("Git Flow - Ramas especializadas")]),t("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-left"}},[a._v("Es importante seguir una convención clara en los nombres y evitar una proliferación excesiva. Git Flow es una convención de ramificación que propone una estructura específica para el desarrollo de software, facilitando la colaboración y la gestión de cambios. Git Flow propone ramas como:")]),t("div",{staticClass:"row"},[t("div",{staticClass:"col-md-6 mb-3"},[t("div",{staticClass:"enhanced-card bg-transparent border border-white"},[t("div",{staticClass:"p-3"},[t("div",{staticClass:"d-flex align-items-center mb-2"},[t("i",{staticClass:"fas fa-code-branch text-git-secondary me-3 fa-lg"}),t("strong",{staticClass:"text-white"},[a._v("main/master")])]),t("small",{staticClass:"text-light"},[a._v("Producción")])])])]),t("div",{staticClass:"col-md-6 mb-3"},[t("div",{staticClass:"enhanced-card bg-transparent border border-white"},[t("div",{staticClass:"p-3"},[t("div",{staticClass:"d-flex align-items-center mb-2"},[t("i",{staticClass:"fas fa-code-branch text-info me-3 fa-lg"}),t("strong",{staticClass:"text-white"},[a._v("develop")])]),t("small",{staticClass:"text-light"},[a._v("Desarrollo")])])])]),t("div",{staticClass:"col-md-6 mb-3"},[t("div",{staticClass:"enhanced-card bg-transparent border border-white"},[t("div",{staticClass:"p-3"},[t("div",{staticClass:"d-flex align-items-center mb-2"},[t("i",{staticClass:"fas fa-code-branch text-warning me-3 fa-lg"}),t("strong",{staticClass:"text-white"},[a._v("feature/*")])]),t("small",{staticClass:"text-light"},[a._v("Nuevas características")])])])]),t("div",{staticClass:"col-md-6 mb-3"},[t("div",{staticClass:"enhanced-card bg-transparent border border-white"},[t("div",{staticClass:"p-3"},[t("div",{staticClass:"d-flex align-items-center mb-2"},[t("i",{staticClass:"fas fa-code-branch text-danger me-3 fa-lg"}),t("strong",{staticClass:"text-white"},[a._v("hotfix/*")])]),t("small",{staticClass:"text-light"},[a._v("Correcciones urgentes")])])])]),t("div",{staticClass:"col-md-6 mb-3"},[t("div",{staticClass:"enhanced-card bg-transparent border border-white"},[t("div",{staticClass:"p-3"},[t("div",{staticClass:"d-flex align-items-center mb-2"},[t("i",{staticClass:"fas fa-code-branch text-purple-light me-3 fa-lg"}),t("strong",{staticClass:"text-white"},[a._v("release/*")])]),t("small",{staticClass:"text-light"},[a._v("Versiones listas para producción")])])])])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"row justify-content-center align-items-stretch mb-4"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-merge"},[t("i",{staticClass:"fas fa-folder-plus fa-2x mb-2"}),t("h4",{staticClass:"mb-0"},[a._v("Creación de ramas")])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("En SVN, las ramas son directorios completos dentro del repositorio. Para crear una rama:")]),t("div",{staticClass:"git-command-block mb-3"},[t("code",{staticClass:"text-info"},[a._v('svn copy http://servidor/repositorio/trunk http://servidor/repositorio/branches/nueva-funcionalidad -m "Creación de rama de prueba"')])]),t("p",{staticClass:"mb-0 small"},[a._v("Luego, los desarrolladores cambian su copia de trabajo a esta nueva rama.")])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-manage"},[t("i",{staticClass:"fas fa-cogs fa-2x mb-2"}),t("h4",{staticClass:"mb-0"},[a._v("Gestión de ramas")])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("Requiere seguir buenas prácticas en el nombre y llevar un registro manual de revisiones, ya que SVN no rastrea automáticamente las fusiones.")])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-figura mb-2"},[t("h5",[a._v("Figura 2. ")]),t("span",[a._v("Estructura SVN")])])},function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("figure",{staticClass:"bg-color-sintesis p-4 p-md-5 mb-5"},[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"328px"},attrs:{src:t("f103"),"data-aos":"zoom-in"}})])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"row justify-content-center align-items-stretch mb-5"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-create"},[t("i",{staticClass:"fas fa-tag fa-2x mb-2"}),t("h5",{staticClass:"mb-0"},[a._v("Nomenclatura y Organización")])]),t("div",{staticClass:"p-4"},[t("ul",{staticClass:"lista-ul--color mb-0"},[t("li",{staticClass:"mb-2"},[t("i",{staticClass:"fas fa-check text-success"}),a._v("Nombrar las ramas de forma descriptiva y coherente (ej. feature/login, bugfix/header).")]),t("li",{staticClass:"mb-0"},[t("i",{staticClass:"fas fa-check text-success"}),a._v("Eliminar ramas que ya han sido fusionadas para mantener el orden.")])])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-merge"},[t("i",{staticClass:"fas fa-shield-alt fa-2x mb-2"}),t("h5",{staticClass:"mb-0"},[a._v("Gestión y Documentación")])]),t("div",{staticClass:"p-4"},[t("ul",{staticClass:"lista-ul--color mb-0"},[t("li",{staticClass:"mb-2"},[t("i",{staticClass:"fas fa-check text-success"}),a._v("Evitar ramas prolongadas sin fusión para prevenir conflictos complejos.")]),t("li",{staticClass:"mb-0"},[t("i",{staticClass:"fas fa-check text-success"}),a._v("Documentar el propósito y estado de cada rama, especialmente en equipos grandes.")])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_3","data-aos":"flip-up"}},[t("h2",[t("span",[a._v("2.3")]),a._v(" Flujos de trabajo con ramas")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width git-flow-section mb-5"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row justify-content-center align-items-stretch"},[t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card bg-transparent border border-white h-100"},[t("div",{staticClass:"p-4 text-center"},[t("i",{staticClass:"fas fa-code-branch fa-3x text-git-secondary mb-3"}),t("h4",{staticClass:"text-white mb-3"},[a._v("Git Flow")]),t("p",{staticClass:"text-light mb-3"},[a._v("Propone una estructura rígida con ramas principales (main, develop) y ramas auxiliares (feature, release, hotfix). Es útil en proyectos con ciclos de desarrollo bien definidos.")]),t("div",{staticClass:"git-command-block mb-2 text-left"},[t("code",{staticClass:"text-success"},[a._v("git checkout develop")])]),t("div",{staticClass:"git-command-block mb-3 text-left"},[t("code",{staticClass:"text-success"},[a._v("git checkout -b feature/sistema-de-reportes")])]),t("p",{staticClass:"text-light small mb-0"},[a._v("Tras pruebas, se fusiona en develop y luego en main.")])])])]),t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-down"}},[t("div",{staticClass:"enhanced-card bg-transparent border border-white h-100"},[t("div",{staticClass:"p-4 text-center"},[t("i",{staticClass:"fab fa-github fa-3x text-info mb-3"}),t("h4",{staticClass:"text-white mb-3"},[a._v("GitHub Flow")]),t("p",{staticClass:"text-light mb-3"},[a._v("Más simple, se basa en ramas creadas desde main, con revisiones mediante pull requests. Es ideal para proyectos ágiles con despliegue continuo.")]),t("div",{staticClass:"bg-color-white p-3 rounded mb-3"},[t("i",{staticClass:"fas fa-code-branch text-primary me-2"}),t("code",{staticClass:"text-dark"},[a._v("fix/captcha-error")])]),t("p",{staticClass:"text-light small mb-0"},[a._v("Ejemplo: Un colaborador trabaja en la rama "),t("b",[a._v("fix/captcha-error")]),a._v(", la sube y abre una pull request.")])])])]),t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card bg-transparent border border-white h-100"},[t("div",{staticClass:"p-4 text-center"},[t("i",{staticClass:"fab fa-gitlab fa-3x text-warning mb-3"}),t("h4",{staticClass:"text-white mb-3"},[a._v("GitLab Flow")]),t("p",{staticClass:"text-light mb-3"},[a._v("Integra Git Flow con prácticas de entrega continua. Permite ramificaciones por entorno (desarrollo, pruebas, producción) y seguimiento de issues.")]),t("div",{staticClass:"d-flex justify-content-center mb-3"},[t("div",{staticClass:"me-2"},[t("i",{staticClass:"fas fa-arrow-right text-success"}),t("small",{staticClass:"d-block text-light"},[a._v("Dev")])]),t("div",{staticClass:"me-2"},[t("i",{staticClass:"fas fa-arrow-right text-warning"}),t("small",{staticClass:"d-block text-light"},[a._v("Test")])]),t("div",[t("i",{staticClass:"fas fa-arrow-right text-danger"}),t("small",{staticClass:"d-block text-light"},[a._v("Prod")])])]),t("p",{staticClass:"text-light small mb-0"},[a._v("Muy usado en entornos DevOps.")])])])])]),t("p",{staticClass:"mb-0 text-muted"},[a._v("Estos flujos mejoran la colaboración, trazabilidad y control de calidad en el desarrollo.")])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"row justify-content-center align-items-stretch mb-4"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-create"},[t("i",{staticClass:"fas fa-tree fa-2x mb-2"}),t("h4",{staticClass:"mb-0"},[a._v("Trunk-Based Development")])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("La mayoría del trabajo se realiza sobre el trunk. Las ramas se utilizan para tareas específicas o versiones.")])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-merge"},[t("i",{staticClass:"fas fa-project-diagram fa-2x mb-2"}),t("h4",{staticClass:"mb-0"},[a._v("Ramas por funcionalidad")])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-3"},[a._v("Se crean subdirectorios en branches, como branches/login-nuevo. Tras terminar, se fusionan manualmente al trunk.")]),t("p",{staticClass:"mb-2 small text-muted"},[a._v("Ejemplo:")]),t("div",{staticClass:"git-command-block mb-3"},[t("code",{staticClass:"text-info"},[a._v("svn copy http://repositorio/trunk http://repositorio/branches/ajuste-notificaciones")])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_4","data-aos":"flip-up"}},[t("h2",[t("span",[a._v("2.4")]),a._v(" Fusiones (mergers) y sus tipos")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"alert alert-info mb-5 tarjeta p-4"},[t("p",{staticClass:"mb-0"},[a._v("Tanto en "),t("b",[a._v("Git")]),a._v(" como en "),t("b",[a._v("SVN")]),a._v(", la fusión puede variar en complejidad según el volumen de cambios, la sincronización entre ramas y el flujo de trabajo adoptado. Sin embargo, Git ofrece una mayor variedad y control sobre los tipos de fusión aplicables.")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width git-flow-section mb-5"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row justify-content-center align-items-stretch"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card bg-transparent border border-white h-100"},[t("div",{staticClass:"p-4"},[t("div",{staticClass:"text-center mb-3"},[t("i",{staticClass:"fas fa-fast-forward fa-3x text-git-secondary mb-2"}),t("h4",{staticClass:"text-white"},[a._v("Merge automático (fast-forward merge)")])]),t("p",{staticClass:"text-light mb-3"},[a._v('Se produce cuando la rama de destino no ha tenido cambios desde que se creó la rama de origen. Git simplemente "avanza" el puntero sin crear un nuevo commit.')]),t("p",{staticClass:"text-light small mb-2"},[a._v("Ejemplo:")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-success"},[a._v("git checkout main")])]),t("div",{staticClass:"git-command-block mb-0"},[t("code",{staticClass:"text-success"},[a._v("git merge feature/nueva-interfaz")])])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-down"}},[t("div",{staticClass:"enhanced-card bg-transparent border border-white h-100"},[t("div",{staticClass:"p-4"},[t("div",{staticClass:"text-center mb-3"},[t("i",{staticClass:"fas fa-project-diagram fa-3x text-info mb-2"}),t("h4",{staticClass:"text-white"},[a._v("Merge con commit de fusión (three-way merge)")])]),t("p",{staticClass:"text-light mb-3"},[a._v("Sucede cuando ambas ramas han tenido desarrollos independientes. Git crea un commit de fusión que une los cambios.")]),t("p",{staticClass:"text-light small mb-2"},[a._v("Ejemplo:")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-success"},[a._v("git checkout develop")])]),t("div",{staticClass:"git-command-block mb-0"},[t("code",{staticClass:"text-success"},[a._v("git merge feature/autenticacion")])])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card bg-transparent border border-white h-100"},[t("div",{staticClass:"p-4"},[t("div",{staticClass:"text-center mb-3"},[t("i",{staticClass:"fas fa-exclamation-triangle fa-3x text-warning mb-2"}),t("h4",{staticClass:"text-white"},[a._v("Fusión con conflictos")])]),t("p",{staticClass:"text-light mb-3"},[a._v("Ocurre si ambas ramas modificaron las mismas líneas de un archivo. Git solicita que el usuario resuelva el conflicto manualmente.")]),t("p",{staticClass:"text-light small mb-2"},[a._v("Ejemplo:")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-warning"},[a._v("CONFLICT (content): Merge conflict in main.js")])]),t("p",{staticClass:"text-light small mb-2"},[a._v("Resolución:")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-success"},[a._v("git add main.js")])]),t("div",{staticClass:"git-command-block mb-0"},[t("code",{staticClass:"text-success"},[a._v("git commit")])])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-down"}},[t("div",{staticClass:"enhanced-card bg-transparent border border-white h-100"},[t("div",{staticClass:"p-4"},[t("div",{staticClass:"text-center mb-3"},[t("i",{staticClass:"fas fa-history fa-3x text-purple-light mb-2"}),t("h4",{staticClass:"text-white"},[a._v("Fusión por rebase")])]),t("p",{staticClass:"text-light mb-3"},[a._v("Reescribe el historial al aplicar los commits de una rama sobre otra, uno a uno. Útil para mantener un historial lineal.")]),t("p",{staticClass:"text-light small mb-2"},[a._v("Ejemplo:")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-success"},[a._v("git checkout feature/estadisticas")])]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-success"},[a._v("git rebase main")])]),t("div",{staticClass:"alert alert-warning p-2 mb-0"},[t("small",[t("i",{staticClass:"fas fa-exclamation-circle me-1"}),a._v("Advertencia: no usar en ramas compartidas sin coordinación.")])])])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-figura mb-2"},[t("h5",[a._v("Figura 3. ")]),t("span",[a._v("Flujo de trabajo con Git")])])},function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("figure",{staticClass:"bg-color-sintesis p-4 p-md-5"},[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"695px"},attrs:{src:t("b25a"),"data-aos":"zoom-in"}})])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("p",{staticClass:"mb-4"},[a._v("En "),t("b",[a._v("Subversion")]),a._v(", el proceso de fusión es más manual. Se realiza mediante el comando svn merge, especificando la fuente y destino de los cambios. Antes de fusionar, el desarrollador debe actualizar su copia local del trunk y luego aplicar los cambios de la rama:")])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width bg-color-purple-light mb-5"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row justify-content-center"},[t("div",{staticClass:"col-lg-10"},[t("div",{staticClass:"enhanced-card bg-transparent bg-color-white-light"},[t("div",{staticClass:"p-4"},[t("div",{staticClass:"row align-items-center mb-3"},[t("div",{staticClass:"col-auto"},[t("div",{staticClass:"tool-icon-container bg-purple-light"},[t("i",{staticClass:"fas fa-terminal fa-2x text-purple"})])]),t("div",{staticClass:"col"},[t("h2",{staticClass:"mb-0 text-purple"},[a._v("Proceso de fusión SVN")]),t("p",{staticClass:"small mb-0"},[a._v("Secuencia de comandos típica")])])]),t("p",{staticClass:"text-light small mb-2"},[a._v("Ejemplo:")]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-info"},[a._v("svn checkout https://repositorio.com/proyecto/trunk")])]),t("div",{staticClass:"git-command-block mb-2"},[t("code",{staticClass:"text-info"},[a._v("cd trunk")])]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-info"},[a._v("svn merge https://repositorio.com/proyecto/branches/nueva-funcionalidad")])]),t("p",{staticClass:"mb-0"},[a._v("Una vez realizada la fusión, es necesario revisar los archivos afectados, resolver conflictos si los hay y confirmar los cambios con un commit.")])])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_5","data-aos":"flip-up"}},[t("h2",[t("span",[a._v("2.5")]),a._v(" Resolución de conflictos en fusiones")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"row align-items-center mb-4"},[t("div",{staticClass:"col-auto"},[t("i",{staticClass:"fas fa-exclamation-circle fa-2x text-danger"})]),t("div",{staticClass:"col"},[t("h2",{staticClass:"mb-0"},[a._v("¿Cómo identificar un conflicto?")])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-warning"},[a._v("<<<<<<< HEAD "),t("br")]),t("code",{staticClass:"text-success"},[a._v('print("Mensaje desde rama principal") '),t("br")]),t("code",{staticClass:"text-yellow"},[a._v("======= "),t("br")]),t("code",{staticClass:"text-info"},[a._v('print("Mensaje desde rama secundaria") '),t("br")]),t("code",{staticClass:"text-warning"},[a._v(">>>>>>> rama-secundaria")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-yellow-50 p-4 mb-0 rounded-lg mb-5"},[t("p",{staticClass:"mb-0 text-yellow-700"},[a._v("Aquí, "),t("b",[a._v("HEAD")]),a._v(" representa el contenido de la rama actual y la parte inferior muestra los cambios traídos desde la otra rama. El desarrollador debe editar el archivo para dejar una única versión válida y coherente.")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"row justify-content-center align-items-stretch mb-5"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-create"},[t("div",{staticClass:"row align-items-center"},[t("div",{staticClass:"col-auto"},[t("i",{staticClass:"fab fa-git-alt fa-3x"})]),t("div",{staticClass:"col"},[t("h4",{staticClass:"mb-0"},[a._v("Git")]),t("small",[a._v("Resolución de conflictos")])])])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-2"},[t("strong",[a._v("1. Detectar conflicto")])]),t("p",{staticClass:"mb-2"},[a._v("Al ejecutar git merge aparece el mensaje de conflicto.")]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-success"},[a._v("$ git merge feature/login ")]),t("code",{staticClass:"text-success"},[a._v("$ CONFLICT (content): Merge conflict in app.js")])]),t("p",{staticClass:"mb-2"},[t("strong",[a._v("2. Editar archivo")])]),t("p",{staticClass:"mb-4"},[a._v("Abrir el archivo afectado y resolver manualmente.")]),t("p",{staticClass:"mb-2"},[t("strong",[a._v("3. Marcar como resuelto")])]),t("p",{staticClass:"mb-2"},[a._v("Agregar el archivo al staging area.")]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-success"},[a._v("$ git add app.js")])]),t("p",{staticClass:"mb-2"},[t("strong",[a._v("4. Finalizar fusión")])]),t("p",{staticClass:"mb-2"},[a._v("Confirmar la resolución del conflicto.")]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-success"},[a._v("$ git commit")])]),t("p",{staticClass:"mb-2"},[t("strong",[a._v("5. Verificar estado")])]),t("p",{staticClass:"mb-2"},[a._v("Opcional: revisar que todo esté correcto.")]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-success"},[a._v("$ git status")])])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card h-100"},[t("div",{staticClass:"card-header git-merge"},[t("div",{staticClass:"row align-items-center"},[t("div",{staticClass:"col-auto"},[t("i",{staticClass:"fas fa-folder-tree fa-3x"})]),t("div",{staticClass:"col"},[t("h4",{staticClass:"mb-0"},[a._v("SVN")]),t("small",[a._v("Resolución de conflictos")])])])]),t("div",{staticClass:"p-4"},[t("p",{staticClass:"mb-2"},[t("strong",[a._v("1. Ejecutar merge")])]),t("p",{staticClass:"mb-3"},[a._v("Al ejecutar svn update o svn merge, se crean archivos auxiliares:")]),t("div",{staticClass:"ps-0"},[t("p",{staticClass:"mb-3 small text-muted"},[t("code",[a._v("file.java.rOLDREV")])]),t("p",{staticClass:"mb-3 small text-muted"},[t("code",[a._v("file.java.rNEWREV")])]),t("p",{staticClass:"mb-4 small text-muted"},[t("code",[a._v("file.java.mine")])])]),t("p",{staticClass:"mb-2"},[t("strong",[a._v("2. Editar y combinar")])]),t("p",{staticClass:"mb-4"},[a._v("Editar y combinar los cambios en "),t("code",[a._v("file.java")])]),t("p",{staticClass:"mb-2"},[t("strong",[a._v("3. Marcar como resuelto")])]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-info"},[a._v("$ svn resolved file.java")])]),t("p",{staticClass:"mb-2"},[t("strong",[a._v("4. Confirmar solución")])]),t("div",{staticClass:"git-command-block mb-4"},[t("code",{staticClass:"text-info"},[a._v('$ svn commit -m "Conflicto resuelto"')])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width bg-color-1 mb-0"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row align-items-center mb-4"},[t("div",{staticClass:"col-auto"},[t("i",{staticClass:"fas fa-tools fa-3x text-white mb-3"})]),t("div",{staticClass:"col"},[t("h2",{staticClass:"text-white mb-2"},[a._v("Herramientas recomendadas")]),t("p",{staticClass:"text-light mb-0"},[a._v("Para resolver conflictos de manera más eficiente y visual")])])]),t("div",{staticClass:"row justify-content-center align-items-stretch"},[t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card bg-white h-100"},[t("div",{staticClass:"p-4 text-center"},[t("div",{staticClass:"mb-3"},[t("div",{staticClass:"tool-icon-container bg-primary-light mb-3"},[t("i",{staticClass:"fas fa-code fa-2x text-primary"})]),t("h4",{staticClass:"text-dark"},[a._v("VS Code")])]),t("p",{staticClass:"text-muted mb-0"},[a._v("Resalta visualmente los bloques en conflicto con interfaz intuitiva.")])])])]),t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-down"}},[t("div",{staticClass:"enhanced-card bg-white h-100"},[t("div",{staticClass:"p-4 text-center"},[t("div",{staticClass:"mb-3"},[t("div",{staticClass:"tool-icon-container bg-success-light mb-3"},[t("i",{staticClass:"fas fa-code-branch fa-2x text-success"})]),t("h4",{staticClass:"text-dark"},[a._v("Sourcetree")])]),t("p",{staticClass:"text-muted mb-0"},[a._v("Interfaz gráfica para resolver conflictos sin editar manualmente.")])])])]),t("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"enhanced-card bg-white h-100"},[t("div",{staticClass:"p-4 text-center"},[t("div",{staticClass:"mb-3"},[t("div",{staticClass:"tool-icon-container bg-purple-light mb-3"},[t("i",{staticClass:"fas fa-layer-group fa-2x text-purple"})]),t("h4",{staticClass:"text-dark"},[a._v("GitKraken")])]),t("p",{staticClass:"text-muted mb-0"},[a._v("Herramienta visual avanzada para gestión de conflictos complejos.")])])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width bg-color-purple-light mb-5 border border-light"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row align-items-center mb-4"},[t("div",{staticClass:"col-auto"},[t("div",{staticClass:"tool-icon-container bg-purple-light"},[t("i",{staticClass:"fas fa-play fa-2x text-purple"})])]),t("div",{staticClass:"col"},[t("h2",{staticClass:"text-dark mb-0"},[a._v("Ejemplo práctico en Git")])])]),t("div",{staticClass:"row mb-4"},[t("div",{staticClass:"col-12"},[t("p",{staticClass:"text-muted"},[a._v("Imaginemos que dos desarrolladores modifican el archivo "),t("code",{staticClass:"text-warning"},[a._v("mensajes.py")]),a._v(" en ramas distintas:")])])]),t("div",{staticClass:"row justify-content-center align-items-stretch mb-3"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-left"}},[t("div",{staticClass:"simple-example-card h-100"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-purple mb-3"},[a._v("Rama main:")]),t("div",{staticClass:"simple-code-block"},[t("code",{staticClass:"text-success"},[a._v('print("Bienvenido al sistema")')])])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-right"}},[t("div",{staticClass:"simple-example-card h-100"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-purple mb-3"},[a._v("Rama rama-soporte:")]),t("div",{staticClass:"simple-code-block"},[t("code",{staticClass:"text-info"},[a._v('print("Bienvenido al sistema de soporte")')])])])])])]),t("p",{staticClass:"text-muted mb-4"},[a._v("Al fusionar rama-soporte en main, Git detectará un conflicto. El desarrollador puede optar por un mensaje combinado:")]),t("div",{staticClass:"row justify-content-center"},[t("div",{staticClass:"col-lg-12",attrs:{"data-aos":"zoom-in-up"}},[t("div",{staticClass:"simple-example-card"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-purple mb-3"},[a._v("Solución combinada:")]),t("div",{staticClass:"simple-code-block mb-3"},[t("code",{staticClass:"text-warning"},[a._v('print("Bienvenido al sistema de soporte y administración")')])]),t("p",{staticClass:"text-purple mb-0"},[a._v("Luego, debe guardar los cambios, añadir el archivo ("),t("code",{staticClass:"text-primary"},[a._v("git add mensajes.py")]),a._v(") y confirmar con "),t("code",{staticClass:"text-primary"},[a._v("git commit")]),a._v(".")])])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_6","data-aos":"flip-up"}},[t("h2",[t("span",[a._v("2.6")]),a._v(" Alternativas a la fusión: el rebase")])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width bg-color-purple-light mb-5 border border-light"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row align-items-center mb-4"},[t("div",{staticClass:"col-auto"},[t("div",{staticClass:"tool-icon-container bg-purple-light"},[t("i",{staticClass:"fas fa-arrow-right fa-2x text-purple"})])]),t("div",{staticClass:"col"},[t("h2",{staticClass:"text-dark mb-0"},[a._v("¿Qué es git rebase?")])])]),t("div",{staticClass:"row mb-4"},[t("div",{staticClass:"col-12"},[t("p",{staticClass:"text-muted"},[a._v("El rebase toma los cambios de una rama (por ejemplo, feature) y los aplica como nuevos commits sobre otra rama base (por ejemplo, main). En la práctica, reescribe el historial de la rama para que parezca que su desarrollo ocurrió directamente sobre la base actualizada (Pérez Martínez, 2015).")])])]),t("div",{staticClass:"simple-example-card mb-4"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-purple mb-3"},[a._v("Ejemplo práctico de uso de rebase")]),t("p",{staticClass:"text-muted mb-3"},[a._v("Supongamos un proyecto con una rama principal (main) y una rama de trabajo (feature-login):")]),t("div",{staticClass:"simple-code-block"},[t("code",{staticClass:"text-warning"},[a._v("git checkout feature-login")]),t("br"),t("code",{staticClass:"text-warning"},[a._v("git rebase main")])])])]),t("div",{staticClass:"simple-example-card mb-4"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-dark mb-4"},[a._v("Este comando realiza tres pasos:")]),t("div",{staticClass:"rebase-steps mb-4"},[t("div",{staticClass:"rebase-step mb-3"},[t("div",{staticClass:"step-number step-purple"},[a._v("1")]),t("div",{staticClass:"step-content"},[a._v("Toma los commits exclusivos de feature-login.")])]),t("div",{staticClass:"rebase-step mb-3"},[t("div",{staticClass:"step-number step-purple"},[a._v("2")]),t("div",{staticClass:"step-content"},[a._v("Los reaplica sobre la punta actual de main.")])]),t("div",{staticClass:"rebase-step mb-3"},[t("div",{staticClass:"step-number step-purple"},[a._v("3")]),t("div",{staticClass:"step-content"},[a._v("Reescribe el historial, simulando una línea de desarrollo continua.")])])]),t("div",{staticClass:"alert alert-success p-3 mb-0"},[t("strong",[a._v("Resultado: ")]),a._v("Un historial más claro y secuencial.")])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"titulo-figura mb-2"},[t("h5",[a._v("Tabla 1. ")]),t("span",[a._v("Diferencia entre "),t("em",[a._v("merge")]),a._v(" y "),t("em",[a._v("rebase")])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"tabla-a color-acento-contenido mb-5"},[t("table",[t("thead",[t("tr",[t("th",{staticClass:"bg-color-tabla text-white"},[a._v("Característica")]),t("th",{staticClass:"bg-color-tabla text-white"},[a._v("git merge")]),t("th",{staticClass:"bg-color-tabla text-white"},[a._v("git rebase")])])]),t("tbody",[t("tr",[t("td",[a._v("Historial")]),t("td",[a._v("Preserva bifurcaciones y "),t("em",[a._v("merges")])]),t("td",[a._v("Historial lineal, sin bifurcaciones")])]),t("tr",[t("td",[a._v("Commit adicional")]),t("td",[a._v("Sí (genera un "),t("em",[a._v("commit")]),a._v(" de fusión)")]),t("td",[a._v("No (reescribe los "),t("em",[a._v("commits")]),a._v(" existentes)")])]),t("tr",[t("td",[a._v("Claridad del historial")]),t("td",[a._v("Menor, por ramas entrelazadas")]),t("td",[a._v("Mayor, por secuencia limpia")])]),t("tr",[t("td",[a._v("Conflictos")]),t("td",[a._v("Pueden surgir y se resuelven en conjunto")]),t("td",[a._v("Pueden surgir, se resuelven uno a uno")])]),t("tr",[t("td",[a._v("Ideal para")]),t("td",[a._v("Historial completo y trazabilidad exacta")]),t("td",[a._v("Historial limpio, antes de hacer "),t("em",[a._v("push")])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width bg-color-purple-light mb-5 border border-success-subtle"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row align-items-center mb-4"},[t("div",{staticClass:"col-auto"},[t("div",{staticClass:"tool-icon-container bg-purple-light"},[t("i",{staticClass:"fas fa-check-circle fa-2x text-purple"})])]),t("div",{staticClass:"col"},[t("h2",{staticClass:"text-dark mb-0"},[a._v("Caso de uso recomendado")])])]),t("div",{staticClass:"row mb-4"},[t("div",{staticClass:"col-12"},[t("p",{staticClass:"text-muted"},[a._v("El rebase es especialmente útil antes de hacer push a un repositorio remoto, cuando se desea mantener un historial limpio y evitar múltiples fusiones innecesarias.")])])]),t("div",{staticClass:"simple-example-card mb-4"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-purple mb-3"},[a._v("Flujo recomendado:")]),t("div",{staticClass:"simple-code-block"},[t("code",{staticClass:"text-warning"},[a._v("git checkout feature")]),t("br"),t("code",{staticClass:"text-warning"},[a._v("git rebase main")]),t("br"),t("code",{staticClass:"text-muted"},[a._v("# Luego de resolver conflictos")]),t("br"),t("code",{staticClass:"text-warning"},[a._v("git push origin feature --force")])])])]),t("div",{staticClass:"simple-example-card bg-danger-light border border-danger-subtle mb-0"},[t("div",{staticClass:"p-4"},[t("div",{staticClass:"d-flex align-items-start"},[t("div",{staticClass:"tool-icon-container bg-danger-light me-3"},[t("i",{staticClass:"fas fa-exclamation-circle fa-2x text-danger"})]),t("div",[t("h6",{staticClass:"text-danger mb-2"},[a._v("Importante:")]),t("p",{staticClass:"mb-0 text-dark"},[a._v("No debe usarse rebase en ramas compartidas con commits publicados, ya que reescribir el historial puede causar inconsistencias para otros colaboradores.")])])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"bg-full-width bg-color-white-light mb-5"},[t("div",{staticClass:"px-4 px-md-5 py-5"},[t("div",{staticClass:"row align-items-center mb-4"},[t("div",{staticClass:"col-auto"},[t("div",{staticClass:"tool-icon-container bg-purple-light"},[t("i",{staticClass:"fas fa-bolt fa-2x text-purple"})])]),t("div",{staticClass:"col"},[t("h2",{staticClass:"text-dark mb-0"},[a._v("Rebase interactivo (git rebase -i)")])])]),t("div",{staticClass:"row mb-4"},[t("div",{staticClass:"col-12"},[t("p",{staticClass:"text-muted"},[a._v("Una variante avanzada es el rebase interactivo, que permite editar, reorganizar o eliminar commits manualmente.")])])]),t("div",{staticClass:"simple-example-card mb-4 border-purple-subtle bg-color-purple-light"},[t("div",{staticClass:"p-4"},[t("p",{staticClass:"text-muted mb-3"},[a._v("Por ejemplo:")]),t("div",{staticClass:"simple-code-block"},[t("code",{staticClass:"text-warning"},[a._v("git rebase -i HEAD~3")])])])]),t("div",{staticClass:"row mb-4"},[t("div",{staticClass:"col-12"},[t("p",{staticClass:"text-muted"},[a._v("Este comando abre una interfaz en el editor de texto donde se puede:")])])]),t("div",{staticClass:"row align-items-stretch"},[t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-left"}},[t("div",{staticClass:"simple-example-card h-100 border-purple-subtle bg-color-purple-light"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-purple mb-3"},[a._v("Opciones disponibles:")]),t("ul",{staticClass:"list-unstyled mb-0"},[t("li",{staticClass:"mb-2"},[t("strong",{staticClass:"text-purple"},[a._v("reword: ")]),a._v("Cambiar mensajes de commit")]),t("li",{staticClass:"mb-2"},[t("strong",{staticClass:"text-purple"},[a._v("drop: ")]),a._v("Eliminar commits")]),t("li",{staticClass:"mb-2"},[t("strong",{staticClass:"text-purple"},[a._v("squash: ")]),a._v("Fusionar varios en uno")]),t("li",{staticClass:"mb-0"},[t("strong",{staticClass:"text-purple"},[a._v("edit: ")]),a._v("Modificar el commit")])])])])]),t("div",{staticClass:"col-lg-6 mb-4",attrs:{"data-aos":"zoom-in-right"}},[t("div",{staticClass:"simple-example-card h-100 border-purple-subtle bg-color-purple-light"},[t("div",{staticClass:"p-4"},[t("h5",{staticClass:"text-purple mb-3"},[a._v("Utilidad:")]),t("p",{staticClass:"text-muted mb-0"},[a._v("Esto es útil para limpiar el historial antes de compartir los cambios, eliminando commits temporales o combinando cambios relacionados.")])])])])])])])},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"anexo__texto"},[t("p",[t("strong",[a._v("Anexo. ")]),a._v(" Resolución de conflictos")])])},function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("div",{staticClass:"col-lg-4"},[s("figure",{attrs:{"data-aos":"zoom-in"}},[s("img",{attrs:{src:t("369e"),alt:""}})])])},function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("div",{staticClass:"col-12 col-md-6 col-lg-3 offset-lg-1"},[s("figure",[s("img",{attrs:{src:t("2391"),alt:"Imagen material complementario"}})])])}],r=t("f31f"),o={tema2:{tema:"2. Creación de ramas y fusiones",titulo:"Ponte a prueba",introduccion:"Demuestra lo que aprendiste sobre control de versiones, Git, SVN, ramas y fusiones.",barajarPreguntas:!0,preguntas:[{id:1,texto:"¿Cuál de las siguientes afirmaciones describe correctamente una ventaja principal del uso de herramientas como Git o SVN?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Permiten programar sin necesidad de documentar el código",esCorrecta:!1},{id:"b",texto:"Aumentan la velocidad de ejecución del software en producción",esCorrecta:!1},{id:"c",texto:"Facilitan el seguimiento de los cambios realizados en el proyecto",esCorrecta:!0},{id:"d",texto:"Reemplazan totalmente los entornos de desarrollo integrados (IDE)",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Las herramientas de control de versiones facilitan el seguimiento de los cambios.",mensaje_incorrecto:"Incorrecto. Las herramientas de control de versiones facilitan el seguimiento de los cambios realizados en el proyecto."},{id:2,texto:"¿Cuál es la principal diferencia entre Git y SVN?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"SVN guarda los cambios localmente, mientras que Git los almacena en un servidor central",esCorrecta:!1},{id:"b",texto:"Git es una herramienta de diseño gráfico y SVN es un editor de texto",esCorrecta:!1},{id:"c",texto:"Git es un sistema de control de versiones distribuido, mientras que SVN es centralizado",esCorrecta:!0},{id:"d",texto:"Ambos funcionan exactamente igual, solo cambia el nombre",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Git es distribuido y SVN es centralizado.",mensaje_incorrecto:"Incorrecto. Git es un sistema de control de versiones distribuido, mientras que SVN es centralizado."},{id:3,texto:"¿Para qué se utiliza la creación de ramas (branches) en un sistema de control de versiones como Git?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Para eliminar versiones antiguas del código",esCorrecta:!1},{id:"b",texto:"Para dividir el proyecto en múltiples archivos",esCorrecta:!1},{id:"c",texto:"Para desarrollar funcionalidades de forma paralela sin afectar la rama principal",esCorrecta:!0},{id:"d",texto:"Para traducir el código a otros lenguajes",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Las ramas permiten el desarrollo paralelo sin afectar la rama principal.",mensaje_incorrecto:"Incorrecto. Las ramas se utilizan para desarrollar funcionalidades de forma paralela sin afectar la rama principal."},{id:4,texto:"¿Qué comando de Git se utiliza para combinar los cambios de una rama con otra?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"git branch",esCorrecta:!1},{id:"b",texto:"git push",esCorrecta:!1},{id:"c",texto:"git merge",esCorrecta:!0},{id:"d",texto:"git clone",esCorrecta:!1}],mensaje_correcto:"¡Correcto! git merge se utiliza para combinar cambios de una rama con otra.",mensaje_incorrecto:"Incorrecto. git merge es el comando para combinar cambios de una rama con otra."},{id:5,texto:"¿Qué ocurre cuando dos personas modifican la misma línea de código en diferentes ramas y luego intentan fusionarlas?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"El sistema elimina automáticamente ambas líneas",esCorrecta:!1},{id:"b",texto:"Git ignora los cambios y guarda la versión más reciente",esCorrecta:!1},{id:"c",texto:"Se produce un conflicto que debe resolverse manualmente",esCorrecta:!0},{id:"d",texto:"Git bloquea permanentemente el repositorio",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Se produce un conflicto que debe resolverse manualmente.",mensaje_incorrecto:"Incorrecto. Se produce un conflicto que debe resolverse manualmente."}]},tema3:{tema:"3. Aplicación de normas ISO 9001 e ISO/IEC 25010",titulo:"Ponte a prueba",introduccion:"Demuestra lo que aprendiste sobre pruebas de software y control de calidad.",barajarPreguntas:!0,preguntas:[{id:1,texto:"¿Cuál de los siguientes tipos de prueba se enfoca en validar métodos individuales de una clase?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Prueba de sistema",esCorrecta:!1},{id:"b",texto:"Prueba de integración",esCorrecta:!1},{id:"c",texto:"Prueba unitaria",esCorrecta:!0},{id:"d",texto:"Prueba funcional",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Las pruebas unitarias se enfocan en validar métodos individuales de una clase.",mensaje_incorrecto:"Incorrecto. Las pruebas unitarias se enfocan en validar métodos individuales de una clase."},{id:2,texto:"¿Qué herramienta se utiliza comúnmente para realizar pruebas unitarias en proyectos Java?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Selenium",esCorrecta:!1},{id:"b",texto:"Postman",esCorrecta:!1},{id:"c",texto:"JUnit",esCorrecta:!0},{id:"d",texto:"Jenkins",esCorrecta:!1}],mensaje_correcto:"¡Correcto! JUnit es la herramienta más común para pruebas unitarias en Java.",mensaje_incorrecto:"Incorrecto. JUnit es la herramienta más común para pruebas unitarias en Java."},{id:3,texto:"En las pruebas de integración, ¿qué se busca validar principalmente?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"La interacción correcta entre varios componentes del sistema",esCorrecta:!0},{id:"b",texto:"El rendimiento del servidor bajo alta carga",esCorrecta:!1},{id:"c",texto:"La cobertura total del código fuente",esCorrecta:!1},{id:"d",texto:"La experiencia del usuario en el frontend",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Las pruebas de integración validan la interacción entre componentes del sistema.",mensaje_incorrecto:"Incorrecto. Las pruebas de integración validan la interacción entre componentes del sistema."},{id:4,texto:"¿Cuál es una característica de la técnica de caja negra?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Se enfoca en la lógica interna del código",esCorrecta:!1},{id:"b",texto:"No requiere conocer el código fuente",esCorrecta:!0},{id:"c",texto:"Evalúa decisiones y bucles internos",esCorrecta:!1},{id:"d",texto:"Se utiliza solo en pruebas unitarias",esCorrecta:!1}],mensaje_correcto:"¡Correcto! La técnica de caja negra no requiere conocer el código fuente.",mensaje_incorrecto:"Incorrecto. La técnica de caja negra no requiere conocer el código fuente."},{id:5,texto:"¿Qué componente permite hacer llamadas HTTP simuladas en pruebas con Spring Boot?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Mockito",esCorrecta:!1},{id:"b",texto:"TestRestTemplate",esCorrecta:!0},{id:"c",texto:"JPARepository",esCorrecta:!1},{id:"d",texto:"JaCoCo",esCorrecta:!1}],mensaje_correcto:"¡Correcto! TestRestTemplate permite hacer llamadas HTTP simuladas en pruebas.",mensaje_incorrecto:"Incorrecto. TestRestTemplate permite hacer llamadas HTTP simuladas en pruebas."}]},tema4:{tema:"4. Integración de pruebas automatizadas en pipelines CI/CD",titulo:"Ponte a prueba",introduccion:"Demuestra lo que aprendiste sobre automatización de pruebas e integración en pipelines CI/CD.",barajarPreguntas:!0,preguntas:[{id:1,texto:"¿Cuál es el principal beneficio de automatizar pruebas de software?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Reducir la cantidad de desarrolladores",esCorrecta:!1},{id:"b",texto:"Eliminar la necesidad de pruebas manuales",esCorrecta:!1},{id:"c",texto:"Mejorar la eficiencia y detectar errores de forma temprana",esCorrecta:!0},{id:"d",texto:"Aumentar el tiempo de desarrollo",esCorrecta:!1}],mensaje_correcto:"¡Correcto! La automatización mejora la eficiencia y permite detectar errores tempranamente.",mensaje_incorrecto:"Incorrecto. La automatización mejora la eficiencia y detecta errores de forma temprana."},{id:2,texto:"¿Qué herramienta es comúnmente utilizada para pruebas unitarias en aplicaciones Java?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Selenium",esCorrecta:!1},{id:"b",texto:"JUnit",esCorrecta:!0},{id:"c",texto:"Postman",esCorrecta:!1},{id:"d",texto:"TestNG",esCorrecta:!1}],mensaje_correcto:"¡Correcto! JUnit es el framework más utilizado para pruebas unitarias en Java.",mensaje_incorrecto:"Incorrecto. JUnit es la herramienta más común para pruebas unitarias en Java."},{id:3,texto:"¿Cuál de las siguientes herramientas permite la automatización de pruebas en la interfaz gráfica de una aplicación web?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Git",esCorrecta:!1},{id:"b",texto:"Selenium",esCorrecta:!0},{id:"c",texto:"JUnit",esCorrecta:!1},{id:"d",texto:"Maven",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Selenium es la herramienta principal para automatizar pruebas de interfaz web.",mensaje_incorrecto:"Incorrecto. Selenium es la herramienta para automatizar pruebas de interfaz web."},{id:4,texto:"En un pipeline CI/CD, ¿qué etapa permite validar automáticamente que los cambios en el código no introducen errores?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Ejecución de pruebas automatizadas",esCorrecta:!0},{id:"b",texto:"Revisión de código manual",esCorrecta:!1},{id:"c",texto:"Publicación de documentación",esCorrecta:!1},{id:"d",texto:"Registro del commit",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Las pruebas automatizadas validan que los cambios no introduzcan errores.",mensaje_incorrecto:"Incorrecto. Las pruebas automatizadas son las que validan automáticamente los cambios."},{id:5,texto:"¿Cuál es la función principal del archivo Jenkinsfile en un proyecto de automatización?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Configurar las reglas de negocio del sistema",esCorrecta:!1},{id:"b",texto:"Definir el flujo de trabajo del pipeline CI/CD",esCorrecta:!0},{id:"c",texto:"Gestionar los permisos de los usuarios",esCorrecta:!1},{id:"d",texto:"Ejecutar manualmente los scripts de prueba",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Jenkinsfile define el flujo de trabajo del pipeline CI/CD.",mensaje_incorrecto:"Incorrecto. Jenkinsfile define el flujo de trabajo del pipeline CI/CD."}]},tema5:{tema:"5. Automatización de pruebas de software",titulo:"Ponte a prueba",introduccion:"Demuestra lo que aprendiste sobre automatización de pruebas de software y herramientas CI/CD.",barajarPreguntas:!0,preguntas:[{id:1,texto:"¿Cuál es el principal beneficio de automatizar pruebas de software?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Reducir la cantidad de desarrolladores",esCorrecta:!1},{id:"b",texto:"Eliminar la necesidad de pruebas manuales",esCorrecta:!1},{id:"c",texto:"Mejorar la eficiencia y detectar errores de forma temprana",esCorrecta:!0},{id:"d",texto:"Aumentar el tiempo de desarrollo",esCorrecta:!1}],mensaje_correcto:"¡Correcto! La automatización mejora la eficiencia y permite detectar errores tempranamente.",mensaje_incorrecto:"Incorrecto. La automatización mejora la eficiencia y detecta errores de forma temprana."},{id:2,texto:"¿Qué herramienta es comúnmente utilizada para pruebas unitarias en aplicaciones Java?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Selenium",esCorrecta:!1},{id:"b",texto:"JUnit",esCorrecta:!0},{id:"c",texto:"Postman",esCorrecta:!1},{id:"d",texto:"TestNG",esCorrecta:!1}],mensaje_correcto:"¡Correcto! JUnit es el framework más utilizado para pruebas unitarias en Java.",mensaje_incorrecto:"Incorrecto. JUnit es la herramienta más común para pruebas unitarias en Java."},{id:3,texto:"¿Cuál de las siguientes herramientas permite la automatización de pruebas en la interfaz gráfica de una aplicación web?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Git",esCorrecta:!1},{id:"b",texto:"Selenium",esCorrecta:!0},{id:"c",texto:"JUnit",esCorrecta:!1},{id:"d",texto:"Maven",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Selenium es la herramienta principal para automatizar pruebas de interfaz web.",mensaje_incorrecto:"Incorrecto. Selenium es la herramienta para automatizar pruebas de interfaz web."},{id:4,texto:"En un pipeline CI/CD, ¿qué etapa permite validar automáticamente que los cambios en el código no introducen errores?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Ejecución de pruebas automatizadas",esCorrecta:!0},{id:"b",texto:"Revisión de código manual",esCorrecta:!1},{id:"c",texto:"Publicación de documentación",esCorrecta:!1},{id:"d",texto:"Registro del commit",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Las pruebas automatizadas validan que los cambios no introduzcan errores.",mensaje_incorrecto:"Incorrecto. Las pruebas automatizadas son las que validan automáticamente los cambios."},{id:5,texto:"¿Cuál es la función principal del archivo Jenkinsfile en un proyecto de automatización?",imagen:"",barajarRespuestas:!0,opciones:[{id:"a",texto:"Configurar las reglas de negocio del sistema",esCorrecta:!1},{id:"b",texto:"Definir el flujo de trabajo del pipeline CI/CD",esCorrecta:!0},{id:"c",texto:"Gestionar los permisos de los usuarios",esCorrecta:!1},{id:"d",texto:"Ejecutar manualmente los scripts de prueba",esCorrecta:!1}],mensaje_correcto:"¡Correcto! Jenkinsfile define el flujo de trabajo del pipeline CI/CD.",mensaje_incorrecto:"Incorrecto. Jenkinsfile define el flujo de trabajo del pipeline CI/CD."}]}},c={name:"Tema2",components:{Actividad:r["default"]},data:function(){return{cuestionario:o.tema2}},mounted:function(){var a=this;this.$nextTick((function(){a.$aosRefresh()}))}},n=c,l=(t("21b2"),t("2877")),d=Object(l["a"])(n,s,i,!1,null,null,null);e["default"]=d.exports},b25a:function(a,e,t){a.exports=t.p+"img/figura3.c95699b4.svg"},f103:function(a,e,t){a.exports=t.p+"img/figura2.2b17c8d2.png"},f906:function(a,e,t){a.exports=t.p+"img/icono-pdf.5c464bfe.svg"},ffec:function(a,e,t){}}]);
//# sourceMappingURL=tema2.905c4a0d.js.map